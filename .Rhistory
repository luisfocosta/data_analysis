environment()
env.profile()
env()
search()
x<-10
if (x > 5){ x<-0
}
x<-10
if (x > 5){ x<-0}
x
x<-1:10
if (x > 5){ x<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
```{r Knitr setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, comment = "")
```
```{r Load & read the file}
setwd("/Users/costal3/projects/R/data_analysis")
ativity<-read.csv("activity.csv")
```
setwd("/Users/costal3/projects/R/data_analysis")
ativity<-read.csv("activity.csv")
activityread.csv()
```{r Knitr setup, include=FALSE}
```{r setup, include=FALSE}
```{r Load & read the file}
setwd("/Users/costal3/projects/R/data_analysis")
activity<-read.csv("activity.csv")
activity
names(activity)
head (activity)
summary(activity)
table(activity)
hist(activity$steps)
hist(activity$steps ~ activity$date)
hist(activity$steps,  activity$date)
hist(activity$steps)
is.na(activity$date)
activity$date is.na()
all(is.na(activity$date))
substr(activity$date, 8,10)
substr(activity$date, 9,10)
activity$day <-substr(activity$date, 9,10)
names(activity)
table(activity$steps, exclude=NA)
table(substr(activity$date, 9, 10), activity$steps, exclude=NA)
stepsPerDay<-table(substr(activity$date, 9, 10), activity$steps, exclude=NA)
head stepsPerDay
head (stepsPerDay)
hist (stepsPerDay)
stepsPerDay<-table(activity$steps, substr(activity$date, 9, 10), exclude=NA)
hist(stepsPerDay)
head (stepsPerDay)
summary(table)
summary(stepsPerDay)
hist(stepsPerDay$steps)
names(stepsPerDay)
head(stepsPerDay)
names(stepsPerDay)<-c("day", "steps")
head(stepsPerDay)
names(stepsPerDay)
stepsPerDay$day
table(activity$steps, substr(activity$date, 9, 10), exclude=NA)
hist hist(activity$steps, substr(activity$date, 9, 10), exclude=NA)
hist(activity$steps, substr(activity$date, 9, 10), exclude=NA)
hist(activity$steps, substr(activity$date, 9, 10))
hist(activity$steps, substr(activity$date, 9, 10))
hist(activity$steps
)
data("faithful")
head(faithful)
hist(faithful)
hist(faithful$eruptions)
plot(stepsPerDay)
knitr::opts_chunk$set(echo = TRUE, comment = "")
activity<-subset(activity, rm.isNA)
activity<-subset(activity, activity$steps!is.na())
activity<-subset(activity, activity$steps!==is.na())
activity<-complete.cases(activity)
table(activity)
activity
setwd("/Users/costal3/projects/R/data_analysis")
activity<-read.csv("activity.csv")
head (activity)
activity$day<-substr(activity$date, 9,10)
```{r}
activity<-complete.cases(activity)
activity$day<-substr(activity$date, 9,10)
setwd("/Users/costal3/projects/R/data_analysis")
activity<-read.csv("activity.csv")
head (activity)
cleanActivity<-activity[complete.cases(activity),]
activity$day<-substr(activity$date, 9,10)
cleanActivity
activity$day<-substr(cleanActivity$date, 9,10)
cleanActivity<-activity[complete.cases(activity),]
activity$day<-substr(cleanActivity$date, 9,10)
cleanActivity<-activity[complete.cases(activity),]
cleanActivity$day<-substr(cleanActivity$date, 9,10)
hist(cleanActivity)
hist(cleanActivity$steps)
table<-c(1:31)
rowsum(Activity, Activity$day, reorder=TRUE)
rowsum(activity, Activity$day, reorder=TRUE)
rowsum(activity, activity$day, reorder=TRUE)
unique(activity$day)
rowsum(activity, numeric(activity$day), reorder=TRUE)
rowsum(activity, numeric(activity$day, 0), reorder=TRUE)
rowsum(activity, as.numeric(activity$day), reorder=TRUE)
head(activity)
rowsum(cleanActivity, as.numeric(cleanActivity$day), reorder=TRUE)
unique(cleanActivity)
unique(cleanActivity$day)
unique(cleanActivity$steps)
rowsum(cleanActivity$steps, as.numeric(cleanActivity$day), reorder=TRUE)
stepsPerDay<-rowsum(cleanActivity$steps, as.numeric(cleanActivity$day), reorder=TRUE)
hist(stepsPerDay)
hist(stepsPerDay)
stepsPerDay
hist(stepsPerDay$steps)
hist(stepsPerDay[1])
hist(stepsPerDay[,1])
hist(stepsPerDay[,2])
hist(stepsPerDay[,1])
knitr::opts_chunk$set(echo = TRUE, comment = "")
raw_data<-read.csv("activity.csv")
setwd("/Users/costal3/projects/R/data_analysis")
raw_data<-read.csv("activity.csv")
head(raw_data)
activity<-na.omit(raw_data)
activity$data <- as.Date(activity$date)
stepsPerDay<-rowsum(activity, activity$date, reorder=TRUE)
stepsPerDay<-rowsum(activity$steps, activity$date, reorder=TRUE)
stepsPerDay
hist(stepsPerDay)
hist(stepsPerDay, main="Histogram of total number of steps per day", xlab="Total # of steps / day")
hist(stepsPerDay, main="Histogram of total number of steps per day", xlab="Total # of steps / day")
mean_steps<-mean(stepsPerDay[1])
mean_steps
mean_steps<-mean(stepsPerDay[,1])
mean_steps
mean_steps<-mean(stepsPerDay)
mean_steps
mean_steps<-mean(stepsPerDay[,1])
activity<-na.omit(raw_data)
activity$data <- as.Date(activity$date)
stepsPerDay<-rowsum(activity$steps, activity$date)
hist(stepsPerDay, main="Histogram of total number of steps per day", xlab="Total # of steps / day")
mean_steps<-mean(stepsPerDay[,1])
mediansteps <- median(stepsPerDay[,1]
mean_steps<-mean(stepsPerDay[,1])
mean(stepsPerDay[,1])
mean_steps
plot(stepsPerDay)
plot(stepsPerDay, type = "l")
View(activity)
steps_per_day <- summarise(group_by(activity, date))
steps_per_day <- summarise(group_by(activity, date), total = sum(steps))
library(knitr)
library(dplyr)
steps_per_day <- summarise(group_by(activity, date), total = sum(steps))
View(stepsPerDay)
hist(steps_per_day)
hist(steps_per_day$steps)
steps_per_day
steps_per_day[,1]
steps_per_day[,2]
hist(steps_per_day$total)
ist(steps_per_day$total, main="Histogram of total number of steps per day", xlab="Total # of steps / day")
mean_steps<-mean(stepsPerDay[,"Total"])
mediansteps <- median(stepsPerDay[,"Total"])
ist(steps_per_day$total, main="Histogram of total number of steps per day", xlab="Total # of steps / day")
mean_steps<-mean(stepsPerDay[,"Total"])
mediansteps <- median(stepsPerDay[,"Total"])
hist(steps_per_day$total, main="Histogram of total number of steps per day", xlab="Total # of steps / day")
mean_steps<-mean(stepsPerDay[,"Total"])
mean_steps<-mean(stepsPerDay[,stepTotal"])
mean_steps<-mean(steps_per_day[,"Total"])
mediansteps <- median(steps_per_day[,"Total"])
mean_steps<-mean(steps_per_day[,"Total"])
mediansteps <- median(steps_per_day[,"Total"])
mean_steps<-mean(steps_per_day[,Total])
mediansteps <- median(steps_per_day[,Total])
mean_steps<-mean(steps_per_day[,steps_per_day$total])
mediansteps <- median(steps_per_day[,"total"])
mean_steps<-mean(steps_per_day[,steps_per_day$total])
steps_per_day$total
mean_steps<-mean(steps_per_day$total)
mean_steps
mean_steps<-mean(steps_per_day$total)
mediansteps <- median(steps_per_day$Total)
mean_steps<-mean(steps_per_day$total)
mediansteps <- median(steps_per_day$total)
mediansteps
summary(steps_per_day)
steps_by_interval <- aggregate(steps~interval, data)
steps_by_interval <- aggregate(steps~interval, activity)
steps_by_interval <- aggregate(steps~interval, activity, mean)
steps_by_interval <- aggregate(steps~interval, activity, mean)
View(steps_by_interval)
plot(activity)
plot(activity$steps, interval)
plot(activity$steps~ interval)
plot(activity$steps~activity$interval)
plot(activity$steps~activity$interval, type="l")
average_five <- summarize(activity, group_by(interval))
average_five <- summarize(activity, group_by(interval), mean(steps))
average_five <- summarize(activity, group_by(activity$interval), mean(activity$steps))
average_five <- summarize(group_by(activity$interval), mean=mean(activity$steps))
average_five <- summarize(group_by(activity$interval), mean=mean(activity$steps))
average_five <- summarize(group_by(interval), mean=mean(activity$steps))
average_five <- summarize(group_by(activity$interval), mean=mean(activity$steps))
average_five <- summarize(group_by(activity$interval), mean=mean(activity$steps))
activity
summary(activity$steps)
setwd("/Users/costal3/projects/R/data_analysis")
raw_data<-read.csv("activity.csv")
head(raw_data)
activity<-na.omit(raw_data)
activity$data <- as.Date(activity$date)
steps_per_day <- summarise(group_by(activity, date), total = sum(steps))
mean_steps<-mean(steps_per_day$total)
median_steps <- median(steps_per_day$total)
average_five <- summarize(group_by(activity$interval), mean=mean(activity$steps))
summarize(group_by(activity$interval), mean=mean(activity$steps))
summarize(activity$interval, mean=mean(activity$steps))
average_five <- summarise(group_by(activity$interval), mean=mean(activity$steps))
summarise(activity$interval, mean=mean(activity$steps))
summarise(activity$interval)
average_five <- summarise(group_by(activity$interval), mean=mean(activity$steps))
f<-activity %>%
group_by(interval) %>%
summarize(AverageSteps=mean(steps_by_interval))
summarize(AverageSteps=mean(steps))
f<-activity %>%
group_by(interval) %>%
summarize(AverageSteps=mean(steps))
f
average_five <- summarise(group_by(activity$interval), mean=mean(activity$steps))
steps_by_interval<-aggregate(steps~interval, activity, mean)
steps_by_interval
aggregate(steps~interval, activity, mean)
steps_per_day <- aggregate(steps~interval, activity, FUN="mean")
View(steps_per_day)
plot(steps_per_day)
plot(steps_per_day, type="l")
View(raw_data)
plot(steps_per_day, type="l", main="Average number of steps over whole time period")
plot(steps_per_day, type="l", main="Average number of steps over whole time period", ylab="Average steps taken")
which.min(activity$date)
actrivity[which.min(activity$date)]
activity[which.min(activity$date)]
activity[which.min(activity$date), 1]
activity[which.min(activity$date), 2]
min(activity$date)
min(as.Date(activity$date)
min(as.Date(activity$date))
max(as.Date(activity$date))
sum(is.na(raw_data$steps))
count(is.na(raw_data$steps))
sum(is.na(raw_data$steps))
corrected_data <- raw_data
for (i in 1:nrow(corrected_data)) {}
for (i in 1:nrow(corrected_data)) {
if (is.na(corrected_data$steps[i])) {
index <- which(corrected_data$interval[i] == )
max_step_interval <- average_steps_per_day$interval[which.max(average_steps_per_day$mean)]
average_steps_per_day <- aggregate(steps~interval, activity, FUN="mean")
max_step_interval <- average_steps_per_day$interval[which.max(average_steps_per_day$mean)]
average_steps_per_day
average_steps_per_day
average_steps_per_day <- aggregate(steps~interval, activity, FUN="mean")
plot(average_steps_per_day,
type="l",
main="Average number of steps over whole time period",
ylab="Average steps taken")
max_step_interval <- average_steps_per_day$interval[which.max(average_steps_per_day$mean)]
average_steps_per_day$interval[which.max(average_steps_per_day$mean)]
which.max(average_steps_per_day$mean)
average_steps_per_day$mean
average_steps_per_day$interval[which.max(average_steps_per_day$steps)]
which.max(average_steps_per_day$steps)
edited_data <- raw_data
for (i in 1:nrow(edited_data)) {
if (is.na(edited_data$steps[i])) {
#Find average steps for this interval (i)
j <- which (edited_data$interval[i] == average_steps_per_day$interval)
average_steps <- average_steps_per_day[j, ]$steps
}
}
View(edited_data)
edited_data <- raw_data
for (i in 1:nrow(edited_data)) {
if (is.na(edited_data$steps[i])) {
#Find average steps for this interval (i)
j <- which (edited_data$interval[i] == average_steps_per_day$interval)
edited_data$steps[i] <- average_steps_per_day[j, ]$steps
}
}
steps_per_day <- summarise(group_by(edited_data, date), total = sum(steps))
hist(steps_per_day$total, main="Histogram of total number of steps per day (edited data)", xlab="Total # of steps / day")
mean_steps<-mean(steps_per_day$total)
median_steps <- median(steps_per_day$total)
edited_data$day <- weekdays(edited_data$date)
edited_data
head(edited_data)
edited_data$day <- weekdays(edited_data$date)
weekdays(as.Date("2012-10-01"))
edited_data$day <- weekdays(as.Date(edited_data$date))
View(edited_data)
for (i in 1:nrow(edited_data)){
case_when(
case_when(
edited_data$day_type <- "weekday"
View(edited_data)
edited_data$day_type[edited_data$day %in% c("Saturday", "Sunday")] <- "weekend"
View(edited_data)
edited_data$day_type[edited_data$day %in% c("Saturday", "Sunday")] <- "weekend"
average_day <- edited_data %>%
group_by(day_type, interval) %>%
summarize(average_steps=mean(steps))
View(average_day)
ggplot(interval, average_steps, data=average_day)
View(average_day)
ggplot(interval, average_steps, data=average_day)
plot(interval, average_steps, data=average_day)
plot(average_day)
qplot(interval,
steps,
aggregate(steps ~ interval + day_type, edited_data, mean)
average_steps_day_type <- aggregate(steps ~ interval + day_type, edited_data, mean)
View(average_steps_day_type)
qplot(interval,
steps,
data = df_imputed_steps_by_interval,
type = 'l',
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ type_of_day, ncol = 1)
qplot(interval,
steps,
data = average_steps_day_type,
type = 'l',
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ type_of_day, ncol = 1)
qplot(interval,
steps,
data = average_steps_day_type,
type = 'l',
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ day_type, ncol = 1)
#Mark weekday/weekend using function weekdays
edited_data$day <- weekdays(edited_data$date)
#Convert weekdays to category
edited_data$day_type[edited_data$day %in% c("Saturday", "Sunday")] <- "Weekend"
edited_data$day_type[edited_data != "Weekend"] <- "Weekday"
#calculate average steps per day
average_dayqplot <- edited_data %>%
group_by(day_type, interval) %>%
summarize(average_steps=mean(steps))
qplot(interval,
steps,
data = average_steps_day_type,
type = 'l',
geom=c("line"),
xlab = "Interval",
ylab = "# of steps",
main = "") +
facet_wrap(~ day_type, ncol = 1)
edited_data <- raw_data
for (i in 1:nrow(edited_data)) {
if (is.na(edited_data$steps[i])) {
#Find average steps for this interval (i) and provision on edited_data$steps
j <- which (edited_data$interval[i] == average_steps_per_day$interval)
edited_data$steps[i] <- average_steps_per_day[j, ]$steps
}
}
steps_per_day <- summarise(group_by(edited_data, date), total = sum(steps))
hist(steps_per_day$total,
main="Histogram of total number of steps per day (edited data)",
xlab="Total # of steps / day")
mean_steps<-mean(steps_per_day$total)
median_steps <- median(steps_per_day$total)
edited_data$day <- weekdays(edited_data$date)
edited_data$day <- weekdays(as.Date(edited_data$date))
edited_data$day_type[edited_data$day %in% c("Saturday", "Sunday")] <- "Weekend"
edited_data$day_type[edited_data != "Weekend"] <- "Weekday"
edited_data$day_type[edited_data$day %in% c("Saturday", "Sunday")] <- "Weekend"
edited_data$day_type[edited_data$day_type != "Weekend"] <- "Weekday"
View(edited_data)
edited_data$day_type[is.na(edited_data$day_type)] <- "Weekday"
View(edited_data)
average_dayqplot <- edited_data %>%
group_by(day_type, interval) %>%
summarize(average_steps=mean(steps))
View(average_dayqplot)
qplot(interval, average_steps, data=average_dayqplot)
qplot(interval, average_steps, data=average_dayqplot)
qplot(interval, average_steps, data=average_dayqplot
type="l",
qplot(interval, average_steps, data=average_dayqplot
type="l",
qplot(interval, average_steps, data=average_dayqplot
geom="line")
qplot(interval, average_steps, data=average_dayqplot, type="l")
qplot(interval, average_steps, data=average_dayqplot, geom="line")
qplot(interval, average_steps, data=average_dayqplot, geom="line", facets+day_type)
library(ggplot2)
qplot(interval, average_steps, data=average_dayqplot, geom="line", facets+day_type)
qplot(interval, average_steps, data=average_dayqplot, geom="line", facets=day_type~.)
qplot(interval, average_steps, data=average_dayqplot, geom="line", facets=day_type~.)
nrow(edited_data)
nrow(average_dayqplot)
nrow(average_dayqplot)
edited_data$day <- weekdays(as.Date(edited_data$date))
edited_data$day_type[edited_data$day %in% c("Saturday", "Sunday")] <- "Weekend"
edited_data$day_type[is.na(edited_data$day_type)] <- "Weekday"
#calculate average steps per day
average_dayqplot <- edited_data %>%
group_by(day_type, interval) %>%
summarize(average_steps=mean(steps))
qplot(interval,
steps,
data = average_dayqplot,
geom=c("line"),
xlab = "Interval",
ylab = "# of steps",
main = "") +
facet_wrap(~ day_type, ncol = 1)
View(average_steps_day_type)
edited_data <- raw_data
for (i in 1:nrow(edited_data)) {
if (is.na(edited_data$steps[i])) {
#Find average steps for this interval (i) and provision on edited_data$steps
j <- which (edited_data$interval[i] == average_steps_per_day$interval)
edited_data$steps[i] <- average_steps_per_day[j, ]$steps
}
}
steps_per_day <- summarise(group_by(edited_data, date), total = sum(steps))
edited_data$day <- weekdays(as.Date(edited_data$date))
edited_data$day_type[edited_data$day %in% c("Saturday", "Sunday")] <- "Weekend"
edited_data$day_type[is.na(edited_data$day_type)] <- "Weekday"
average_steps_per_day_edited <- edited_data %>%
group_by(day_type, interval) %>%
summarize(average_steps=mean(steps))
aspde <- aggregate(day_type~interval, steps, FUN="mean")
aspde <- aggregate(day_type~interval, edited_data, FUN="mean")
View(aspde)
warnings()
View(edited_data)
aspde <- aggregate(edited_data$average_steps, by=edited_data[c("day_type", "interval")], FUN="mean")
aggregate(edited_data$average_steps, by=edited_data[c("day_type", "interval")], FUN="mean")
edited_data$average_steps
edited_data
aggregate(edited_data$average_steps, by=edited_data[c("day_type", "interval")], FUN="mean")
aggregate(edited_data$steps, by=edited_data[c("day_type", "interval")], FUN="mean")
aggregate(edited_data$steps, by=edited_data[c("day_type", "interval")], FUN="mean")
plot_data<-aggregate(edited_data$steps, by=edited_data[c("day_type", "interval")], FUN="mean")
View(plot_data)
plot_data<-aggregate(edited_data$steps, by=edited_data[c("day_type", "interval")], FUN="mean")
plot_data["x"]
names(plot_data["x"])<-"Average steps"
View(plot_data)
View(plot_data)
View(plot_data)
names(plot_data[3])<-"Average steps"
View(plot_data)
names(plot_data)<-c("day_type", "internval", "Average steps")
plot_data<-aggregate(edited_data$steps, by=edited_data[c("day_type", "interval")], FUN="mean")
names(plot_data)<-c("day_type", "internval", "Average_steps")
qplot(interval,
Average_steps,
data = plot_data,
geom=c("line"),
xlab = "Interval",
ylab = "# of steps",
main = "") +
facet_wrap(~ day_type, ncol = 1)
names(plot_data)<-c("day_type", "interval", "Average_steps")
qplot(interval,
Average_steps,
data = plot_data,
geom=c("line"),
xlab = "Interval",
ylab = "# of steps",
main = "") +
facet_wrap(~ day_type, ncol = 1)
